!function(e){function t(n){if(r[n])return r[n].exports;var a=r[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var r={};t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("cubemap",{schema:{folder:{type:"string"},edgeLength:{type:"int",default:5e3},ext:{type:"string",default:"jpg"},transparent:{type:"boolean",default:!1}},update:function(e){var t=this.el,r=this.data,n=r.folder,a=["posx","negx","posy","negy","posz","negz"];a=a.map(function(e){return e+"."+r.ext});var o=new THREE.CubeTextureLoader;o.setPath(n);var u=o.load(a),i=THREE.ShaderLib.cube,p=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:i.uniforms,depthWrite:!1,side:THREE.BackSide,transparent:r.transparent}),f=p.clone();f.uniforms.tCube.value=u;var s=r.edgeLength,d=new THREE.CubeGeometry(s,s,s);t.setObject3D("cubemap",new THREE.Mesh(d,f))},remove:function(){this.el.removeObject3D("cubemap")}})}]);